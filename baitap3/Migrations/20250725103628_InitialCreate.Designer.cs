// <auto-generated />
using System;
using BaiOnline3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace baitap3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250725103628_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BaiOnline3.Models.AllowAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessProperties")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AllowAccesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessProperties = "Id,InternName,InternAddress,ImageData,DateOfBirth,InternMail,InternMailReplace,University,CitizenIdentification,CitizenIdentificationDate,Major,Internable,FullTime,Cvfile,InternSpecialized,TelephoneNum,InternStatus,RegisteredDate,HowToKnowAlta,InternPassword,ForeignLanguage,YearOfExperiences,PasswordStatus,ReadyToWork,InternEnabled,EntranceTest,Introduction,Note,LinkProduct,JobFields,HiddenToEnterprise",
                            RoleId = 1,
                            TableName = "Intern"
                        },
                        new
                        {
                            Id = 2,
                            AccessProperties = "InternMail,InternName,Major",
                            RoleId = 2,
                            TableName = "Intern"
                        });
                });

            modelBuilder.Entity("BaiOnline3.Models.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CitizenIdentification")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CitizenIdentificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CvFile")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntranceTest")
                        .HasColumnType("text");

                    b.Property<string>("ForeignLanguage")
                        .HasColumnType("text");

                    b.Property<bool?>("FullTime")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HiddenToEnterprise")
                        .HasColumnType("boolean");

                    b.Property<string>("HowToKnowAlta")
                        .HasColumnType("text");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("bytea");

                    b.Property<string>("InternAddress")
                        .HasColumnType("text");

                    b.Property<bool?>("InternEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("InternMail")
                        .HasColumnType("text");

                    b.Property<string>("InternMailReplace")
                        .HasColumnType("text");

                    b.Property<string>("InternName")
                        .HasColumnType("text");

                    b.Property<string>("InternPassword")
                        .HasColumnType("text");

                    b.Property<int?>("InternSpecialized")
                        .HasColumnType("integer");

                    b.Property<string>("InternStatus")
                        .HasColumnType("text");

                    b.Property<bool?>("Internable")
                        .HasColumnType("boolean");

                    b.Property<string>("Introduction")
                        .HasColumnType("text");

                    b.Property<string>("JobFields")
                        .HasColumnType("text");

                    b.Property<string>("LinkProduct")
                        .HasColumnType("text");

                    b.Property<string>("Major")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PasswordStatus")
                        .HasColumnType("text");

                    b.Property<bool?>("ReadyToWork")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("RegisteredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TelephoneNum")
                        .HasColumnType("text");

                    b.Property<string>("University")
                        .HasColumnType("text");

                    b.Property<int?>("YearOfExperiences")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Interns");
                });

            modelBuilder.Entity("BaiOnline3.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "EnterpriseUser"
                        });
                });

            modelBuilder.Entity("BaiOnline3.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Admin User",
                            PasswordHash = "$2a$11$51d40/uKZqVvw.cGyI3qZOjTnJE58EzY0mZj2rymv3WfnIi7FWP2S",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            DateOfBirth = new DateTime(1995, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Nicky",
                            PasswordHash = "$2a$11$/ekRz6Ny8IQaH3GHQtxfb.VfuuJJBykiae7tTJCA7OtJ4Hhc2YMDq",
                            RoleId = 2,
                            Username = "Nick"
                        });
                });

            modelBuilder.Entity("BaiOnline3.Models.User", b =>
                {
                    b.HasOne("BaiOnline3.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
